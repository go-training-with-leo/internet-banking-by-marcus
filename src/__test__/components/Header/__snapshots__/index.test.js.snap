// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test notifyBusy props order 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="header"
      >
        <div
          class="header-left"
        >
          <svg
            class="mobile-menu"
            fill="white"
          >
            menu.svg
          </svg>
          <span>
            Title
          </span>
          <button>
            Button
          </button>
        </div>
        <div
          class="notif hide"
        >
          <svg
            class="notif-busy"
            height="40"
            width="40"
          >
            notificationBusy.svg
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="header"
    >
      <div
        class="header-left"
      >
        <svg
          class="mobile-menu"
          fill="white"
        >
          menu.svg
        </svg>
        <span>
          Title
        </span>
        <button>
          Button
        </button>
      </div>
      <div
        class="notif hide"
      >
        <svg
          class="notif-busy"
          height="40"
          width="40"
        >
          notificationBusy.svg
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Test notifyFree props order 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="header"
      >
        <div
          class="header-left"
        >
          <svg
            class="mobile-menu"
            fill="white"
          >
            menu.svg
          </svg>
          <span>
            Title
          </span>
          <button>
            Button
          </button>
        </div>
        <div
          class="notif hide"
        >
          <svg
            class="notif-free"
            height="40"
            width="40"
          >
            notificationFree.svg
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="header"
    >
      <div
        class="header-left"
      >
        <svg
          class="mobile-menu"
          fill="white"
        >
          menu.svg
        </svg>
        <span>
          Title
        </span>
        <button>
          Button
        </button>
      </div>
      <div
        class="notif hide"
      >
        <svg
          class="notif-free"
          height="40"
          width="40"
        >
          notificationFree.svg
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Test notifyRemove props order 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="header"
      >
        <div
          class="header-left"
        >
          <svg
            class="mobile-menu"
            fill="white"
          >
            menu.svg
          </svg>
          <span>
            Title
          </span>
          <button>
            Button
          </button>
        </div>
        <div
          class="notif hide"
        >
          <svg
            class="notif-remove"
            height="40"
            width="40"
          >
            notificationRemove.svg
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="header"
    >
      <div
        class="header-left"
      >
        <svg
          class="mobile-menu"
          fill="white"
        >
          menu.svg
        </svg>
        <span>
          Title
        </span>
        <button>
          Button
        </button>
      </div>
      <div
        class="notif hide"
      >
        <svg
          class="notif-remove"
          height="40"
          width="40"
        >
          notificationRemove.svg
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Test props 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="header"
      >
        <div
          class="header-left"
        >
          <svg
            class="mobile-menu"
            fill="white"
          >
            menu.svg
          </svg>
          <span>
            Title
          </span>
          <button>
            Button
          </button>
        </div>
        <div
          class="notif hide"
        >
          <svg
            class="notif-busy"
            height="40"
            width="40"
          >
            notificationBusy.svg
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="header"
    >
      <div
        class="header-left"
      >
        <svg
          class="mobile-menu"
          fill="white"
        >
          menu.svg
        </svg>
        <span>
          Title
        </span>
        <button>
          Button
        </button>
      </div>
      <div
        class="notif hide"
      >
        <svg
          class="notif-busy"
          height="40"
          width="40"
        >
          notificationBusy.svg
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
